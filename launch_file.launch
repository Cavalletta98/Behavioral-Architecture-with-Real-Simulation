<launch>

    <!-- Home position (must be inside the map) -->
    <param name="home_pos_x" type="int" value="-7" />
    <param name="home_pos_y" type="int" value="2" />

    <!-- Min and max delay for sending command -->
    <param name="min_delay_command" type="double" value="1" />
    <param name="max_delay_command" type="double" value="10" />

    <!-- Min and max delay for transition between PLAY and NORMAL states -->
    <param name="min_transition_play_normal" type="int" value="1" />
    <param name="max_transition_play_normal" type="int" value="400" />

    <!-- Min and max delay for transition between NORMAL and SLEEP states -->
    <param name="min_transition_normal_sleep" type="int" value="1" />
    <param name="max_transition_normal_sleep" type="int" value="10" />

    <!-- Min and max delay for sleeping -->
    <param name="min_sleep_delay" type="double" value="1" />
    <param name="max_sleep_delay" type="double" value="10" />

    <!-- Min and max delay for mantaining 45° clockwise the head -->
    <param name="min_clock_head_delay" type="double" value="1" />
    <param name="max_clock_head_delay" type="double" value="10" />

    <!-- Min and max delay for mantaining 45° counterclockwise the head -->
    <param name="min_countclock_head_delay" type="double" value="1" />
    <param name="max_countclock_head_delay" type="double" value="10" />

    <!-- Min and max delay for mantaining 0° the head -->
    <param name="min_head_delay" type="double" value="1" />
    <param name="max_head_delay" type="double" value="10" />

    <!-- Min and max delay for disappearing the ball -->
    <param name="min_dis_ball_delay" type="int" value="1" />
    <param name="max_dis_ball_delay" type="int" value="10" />

    <!-- Map dimension -->
    <param name="map_x" type="int" value="7" />
    <param name="map_y" type="int" value="7" />

    <!-- Launch the simulation and the nodes-->
    <include file="$(find simulation)/launch/gazebo_world.launch" />
    <node name="motion_server" pkg="robot_control" type="robot_controller.py" respawn="true"/>
    <node name="image_detector" pkg="sensoring" type="ball_detector.py" respawn="true" output="screen"/>
    <node name="command_manager_state_machine" pkg="manager" type="command_manager.py" respawn="true" output="screen"/>
    <node name="ball" pkg="sensoring" type="ball.py" respawn="true"/>

</launch>